{"version":3,"sources":["components/DownloadButton.tsx","components/getTodos.tsx","components/TodosList.tsx","components/SortedPanel.tsx","App.tsx","index.tsx"],"names":["DownloadButton","getTodos","isLoading","type","className","onClick","disabled","getData","url","a","fetch","preparedDatas","json","readyData","allTodosDatas","usersDatas","todosDatas","allDatas","map","todo","todoOwner","find","user","id","userId","ListTodos","todos","key","cn","completed","username","title","SortedPanel","sortedPanelInfo","panel","link","href","clickEvent","sortedName","name","App","state","sortedBy","isLoaded","setState","then","finally","sortByField","field","newTodos","sort","b","comperator1","comperator2","Number","localeCompare","changeSortPage","page","reverseTodos","reverse","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8336d42.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  getTodos: () => void;\n  isLoading: boolean;\n}\n\nexport const DownloadButton: React.FC<Props> = ({ getTodos, isLoading }) => (\n  <button\n    type=\"button\"\n    className=\"get-info\"\n    onClick={() => getTodos()}\n    disabled={isLoading}\n  >\n    Get all todos\n  </button>\n);\n","import { Todo, User } from './interfaces';\n\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getData = async (url: string) => {\n  const preparedDatas = await fetch(url);\n  const readyData = await preparedDatas.json();\n\n  return readyData;\n};\n\nexport const allTodosDatas = async () => {\n  const usersDatas: User[] = await getData(usersUrl);\n  const todosDatas: Todo[] = await getData(todosUrl);\n\n  const allDatas = todosDatas.map((todo: Todo) => {\n    const todoOwner = usersDatas.find(user => user.id === todo.userId);\n\n    return {\n      ...todo,\n      user: todoOwner,\n    };\n  });\n\n  return allDatas;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from './interfaces';\n\ninterface Props {\n  todos: Todo[];\n}\n\nconst ListTodos: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <div\n          key={todo.id}\n          className={cn({\n            'todo completed': todo.completed,\n            todo: !todo.completed,\n          })}\n        >\n          <div className=\"id-todo\">\n            <p className=\"id__text\">\n              {todo.id}\n            </p>\n          </div>\n          <div className=\"name\">\n            <p className=\"name__text\">\n              {todo.user.username}\n            </p>\n          </div>\n          <div className=\"title\">\n            <p className=\"title__text\">\n              {todo.title}\n            </p>\n          </div>\n          <div className=\"status\">\n            <p className=\"status__text\">\n              {todo.completed ? 'Completed' : 'Active'}\n            </p>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default ListTodos;\n","import React from 'react';\nimport { ControlPanel } from './interfaces';\n\ninterface Props {\n  sortedPanelInfo: ControlPanel[];\n}\n\nexport const SortedPanel: React.FC<Props> = ({ sortedPanelInfo }) => (\n  <ul className=\"list\">\n    {sortedPanelInfo.map(panel => (\n      <li className=\"item\" key={panel.link}>\n        <a\n          href={panel.link}\n          className=\"link\"\n          onClick={() => panel.clickEvent(panel.sortedName)}\n        >\n          {panel.name}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { AppState, Todo, ControlPanel } from './components/interfaces';\nimport { DownloadButton } from './components/DownloadButton';\nimport { allTodosDatas } from './components/getTodos';\nimport ListTodos from './components/TodosList';\nimport { SortedPanel } from './components/SortedPanel';\n\nclass App extends React.Component {\n  state: AppState = {\n    todos: [],\n    sortedBy: 'id',\n    isLoading: false,\n    isLoaded: false,\n  };\n\n  getTodos = () => {\n    this.setState({ isLoading: true });\n    allTodosDatas()\n      .then(todos => this.setState({ todos, isLoaded: true }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  sortByField = (field: string) => {\n    const { todos } = this.state;\n\n    const newTodos = [...todos\n      .sort((a: Todo, b: Todo): number => {\n        const comperator1 = a[field] || a.user[field] || false;\n        const comperator2 = b[field] || b.user[field] || false;\n\n        if (typeof comperator1 === 'number' || typeof comperator1 === 'boolean') {\n          return Number(comperator1) - Number(comperator2);\n        }\n\n        if (typeof comperator1 === 'string') {\n          return comperator1.localeCompare(comperator2 as string);\n        }\n\n        return 0;\n      })];\n\n    this.setState({ todos: newTodos });\n  };\n\n  changeSortPage = (page: string) => {\n    const { sortedBy, todos } = this.state;\n\n    if (sortedBy === page) {\n      const reverseTodos: Todo[] = [...todos].reverse();\n\n      this.setState({ todos: reverseTodos });\n    } else {\n      this.setState(() => ({ sortedBy: page }),\n        () => this.sortByField(this.state.sortedBy));\n    }\n  };\n\n  render() {\n    const { todos, isLoaded, isLoading } = this.state;\n    const sortedPanelInfo: ControlPanel[] = [\n      {\n        name: 'ID', link: '#id', sortedName: 'id', clickEvent: this.changeSortPage,\n      },\n      {\n        name: 'Sort by name', link: '#name', sortedName: 'username', clickEvent: this.changeSortPage,\n      },\n      {\n        name: 'Sort by title', link: '#title', sortedName: 'title', clickEvent: this.changeSortPage,\n      },\n      {\n        name: 'Sort by status', link: '#status', sortedName: 'completed', clickEvent: this.changeSortPage,\n      },\n    ];\n\n    return (\n      <>\n        {!isLoaded && (\n          <DownloadButton\n            getTodos={this.getTodos}\n            isLoading={isLoading}\n          />\n        )}\n        {isLoading && (\n          <p className=\"loading\">Loading data...</p>\n        )}\n        {isLoaded && !isLoading && (\n          <>\n            <h1 className=\"header\">List Todos</h1>\n            <SortedPanel\n              sortedPanelInfo={sortedPanelInfo}\n            />\n            <ListTodos\n              todos={todos}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}