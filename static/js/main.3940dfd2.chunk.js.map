{"version":3,"sources":["components/DownloadButton.tsx","components/getTodos.tsx","components/TodosList.tsx","components/SortedPanel.tsx","App.tsx","index.tsx"],"names":["DownloadButton","getTodos","isLoading","type","className","onClick","disabled","getData","url","a","fetch","preparedDatas","json","readyData","allTodosDatas","usersDatas","todosDatas","allDatas","map","todo","todoOwner","find","user","id","userId","ListTodos","todos","completed","key","username","title","SortedPanel","sortedPanelInfo","panel","link","href","clickEvent","name","App","state","order","sortId","sortName","sortTitle","sortStatus","isLoadDatas","setState","then","finally","sortByName","sortedTodos","sort","b","localeCompare","changeOrder","sortByTitle","sortByStatus","completedTodos","filter","activeTodos","sortById","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3940dfd2.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  getTodos: () => void;\n  isLoading: boolean;\n}\n\nexport const DownloadButton: React.FC<Props> = ({ getTodos, isLoading }) => (\n  <button\n    type=\"button\"\n    className=\"get-info\"\n    onClick={() => getTodos()}\n    disabled={isLoading}\n  >\n    Get all todos\n  </button>\n);\n","import { Todo, User } from './interfaces';\n\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getData = async (url: string) => {\n  const preparedDatas = await fetch(url);\n  const readyData = await preparedDatas.json();\n\n  return readyData;\n};\n\nexport const allTodosDatas = async () => {\n  const usersDatas: User[] = await getData(usersUrl);\n  const todosDatas: Todo[] = await getData(todosUrl);\n\n  const allDatas = todosDatas.map((todo: Todo) => {\n    const todoOwner = usersDatas.find(user => user.id === todo.userId);\n\n    return {\n      ...todo,\n      user: todoOwner,\n    };\n  });\n\n  return allDatas;\n};\n","import React from 'react';\nimport { Todo } from './interfaces';\n\ninterface Props {\n  todos: Todo[];\n}\n\nconst ListTodos: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <div className={todo.completed ? 'todo completed' : 'todo'} key={todo.id}>\n          <div className=\"id-todo\">\n            <p className=\"id__text\">\n              {todo.id}\n            </p>\n          </div>\n          <div className=\"name\">\n            <p className=\"name__text\">\n              {todo.user.username}\n            </p>\n          </div>\n          <div className=\"title\">\n            <p className=\"title__text\">\n              {todo.title}\n            </p>\n          </div>\n          <div className=\"status\">\n            <p className=\"status__text\">\n              {todo.completed ? 'Completed' : 'Active'}\n            </p>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default ListTodos;\n","import React from 'react';\nimport { ControlPanel } from './interfaces';\n\ninterface Props {\n  sortedPanelInfo: ControlPanel[];\n}\n\nexport const SortedPanel: React.FC<Props> = ({ sortedPanelInfo }) => (\n  <ul className=\"list\">\n    {sortedPanelInfo.map(panel => (\n      <li className=\"item\" key={panel.link}>\n        <a\n          href={panel.link}\n          className=\"link\"\n          onClick={panel.clickEvent}\n        >\n          {panel.name}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { AppState, Todo, ControlPanel } from './components/interfaces';\nimport { DownloadButton } from './components/DownloadButton';\nimport { allTodosDatas } from './components/getTodos';\nimport ListTodos from './components/TodosList';\nimport { SortedPanel } from './components/SortedPanel';\n\nclass App extends React.Component {\n  state: AppState = {\n    todos: [],\n    order: {\n      sortId: true,\n      sortName: false,\n      sortTitle: false,\n      sortStatus: false,\n    },\n    isLoading: false,\n    isLoadDatas: false,\n  };\n\n  getTodos = () => {\n    this.setState({ isLoading: true });\n    allTodosDatas()\n      .then(todos => this.setState({ todos, isLoadDatas: true }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  sortByName = () => {\n    const { todos } = this.state;\n    const { sortName } = this.state.order;\n    let sortedTodos: Todo[];\n\n    if (!sortName) {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => a.user?.username.localeCompare(b.user?.username)),\n      ];\n    } else {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => b.user?.username.localeCompare(a.user?.username)),\n      ];\n    }\n\n    const changeOrder = !sortName;\n\n    this.setState(({ todos: sortedTodos, order: { sortName: changeOrder } }));\n  };\n\n  sortByTitle = () => {\n    const { todos } = this.state;\n    const { sortTitle } = this.state.order;\n    let sortedTodos: Todo[];\n\n    if (!sortTitle) {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => a.title.localeCompare(b.title)),\n      ];\n    } else {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => b.title.localeCompare(a.title)),\n      ];\n    }\n\n    const changeOrder = !sortTitle;\n\n    this.setState(({ todos: sortedTodos, order: { sortTitle: changeOrder } }));\n  };\n\n  sortByStatus = () => {\n    const { todos } = this.state;\n    const { sortStatus } = this.state.order;\n    let sortedTodos: Todo[];\n    const completedTodos: Todo[] = todos.filter(todo => todo.completed);\n    const activeTodos: Todo[] = todos.filter(todo => !todo.completed);\n\n    if (!sortStatus) {\n      sortedTodos = [...activeTodos, ...completedTodos];\n    } else {\n      sortedTodos = [...completedTodos, ...activeTodos];\n    }\n\n    const changeOrder = !sortStatus;\n\n    this.setState(({ todos: sortedTodos, order: { sortStatus: changeOrder } }));\n  };\n\n  sortById = () => {\n    const { todos } = this.state;\n    const { sortId } = this.state.order;\n    let sortedTodos: Todo[];\n\n    if (!sortId) {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => a.id - b.id)];\n    } else {\n      sortedTodos = [...todos\n        .sort((a: Todo, b: Todo) => b.id - a.id)];\n    }\n\n    const changeOrder = !sortId;\n\n    this.setState(({ todos: sortedTodos, order: { sortId: changeOrder } }));\n  };\n\n  render() {\n    const { todos, isLoadDatas, isLoading } = this.state;\n    const sortedPanelInfo: ControlPanel[] = [\n      { name: 'ID', link: '#id', clickEvent: this.sortById },\n      { name: 'Sort by name', link: '#name', clickEvent: this.sortByName },\n      { name: 'Sort by title', link: '#title', clickEvent: this.sortByTitle },\n      { name: 'Sort by status', link: '#status', clickEvent: this.sortByStatus },\n    ];\n\n    return (\n      <>\n        {!isLoadDatas && (\n          <DownloadButton\n            getTodos={this.getTodos}\n            isLoading={isLoading}\n          />\n        )}\n        {isLoading && (\n          <p className=\"loading\">Loading data...</p>\n        )}\n        {isLoadDatas && !isLoading && (\n          <>\n            <h1 className=\"header\">List Todos</h1>\n            <SortedPanel\n              sortedPanelInfo={sortedPanelInfo}\n            />\n            <ListTodos\n              todos={todos}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}